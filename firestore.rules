/**
 * @file Firebase Security Rules for Firestore.
 *
 * Core Philosophy:
 * This ruleset provides public read access to project data while restricting access to contact messages.
 *
 * Data Structure:
 * - /projects/{projectId}: Stores publicly accessible project information.
 * - /contact_messages/{messageId}: Stores private contact messages.
 *
 * Key Security Decisions:
 * - Projects are publicly readable, but write access is denied to everyone.
 * - Contact messages are not accessible by anyone (all operations denied).
 * - No user-specific data is stored, so no user-based authorization is needed.
 * - Denormalization is not used because there are no complex access control requirements.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows public read access to projects, but restricts all write access.
     * @path /projects/{projectId}
     * @allow (get, list) Anyone can read project data.
     * @deny (create, update, delete) No one can create, update, or delete project data.
     * @principle Allows public reads with no writes permitted.
     */
    match /projects/{projectId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Restricts all access to contact messages.
     * @path /contact_messages/{messageId}
     * @allow None.
     * @deny (get, list, create, update, delete) All access to contact messages is denied.
     * @principle Secure sensitive data by default.
     */
    match /contact_messages/{messageId} {
      allow get, list, create, update, delete: if false;
    }
  }
}